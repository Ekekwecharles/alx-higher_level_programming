=================================================
Test cases for the ``2-matrix_divided.py`` module
=================================================

The ``2-matrix_divided.py`` module divides all the element of the list -> Accepts both int and float values
matrix_divided(matrix, div)

Numbers
=======

``2-matrix_divided.py`` returns the new matrix

::
Positive numbers
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::
Dividing with very large number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 9999)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

::
Dividing with a -ve number
>>> matrix_divided([[-1, 2, -3], [-4, 5, -6], [-7, 8, -9]], -2)
[[0.5, -1.0, 1.5], [2.0, -2.5, 3.0], [3.5, -4.0, 4.5]]

::
Float division
>>> matrix_divided([[1.2, 2.2, 3.2], [4.2, 5.2, 6.2]], 0.5)
[[2.4, 4.4, 6.4], [8.4, 10.4, 12.4]]

::
Passing Matrix with different row size
matrix_divided([[1, 2, 3], [4, 8, 7, 9], [2]], 1.5)
...
TypeError: Each row of the matrix must have the same size

::
dividing with zero
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

::
Passing a single dimensional matrix
>>> matrix_divided([1, 2, 3], 25)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Non-Numbers
===========

::
Passing matrix as none
>>> matrix_divided(None, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::
Passing div as None
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
...
TypeError: div must be a number

::
>>> matrix_divided({9, 8, 7}, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::
Passing a list containing only None
>>> matrix_divided([None], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::
Passing a string as Elements
>>> matrix_divided([["string"], ["here"]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


::
Passing div as a string
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], "25")
Traceback (most recent call last):
...
TypeError: div must be a number

::
Passing an Empty list
>>> matrix_divided([], 25)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::
Missing up numbers and strings in the matrix
>>> matrix_divided([[1, 2, 3], [5, 6, "7"]], 25)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

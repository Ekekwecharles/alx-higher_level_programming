==============================================
Test cases for the ``4-print_square.py`` module

The ``4-print_square.py`` module prints a square with '#'
def print_square(size)

Numbers
=======

::
Passing a number
>>> print_square = __import__('4-print_square').print_square
>>> print_square(3)
###
###
###

::
Passing a bigger number
>>> print_square(12)
############
############
############
############
############
############
############
############
############
############
############
############

::
Passing 0
>>> print_square(0)


Invalid Inputs
==============

::
Passing a string
>>> print_square("a")
Traceback (most recent call last):
...
TypeError: size must be an integer

::
Passing a float
>>> print_square(1.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

::
Passing a negative number
>>> print_square(-5)
Traceback (most recent call last):
...
ValueError: size must be >= 0

::
Passing None as parameter
>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

::
Passing no argument
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'
